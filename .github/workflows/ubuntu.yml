name: Ubuntu 

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ubuntu_test:
    name: Execute tests on Ubuntu
    strategy:
      fail-fast: false
      matrix:
        swift_version: ["6.0"]
        include:
          - container: "swiftlang/swift:nightly-6.0-jammy"
            continue-on-error: true
    runs-on: ubuntu-22.04
    env:
      OPENSWIFTUI_WERROR: 0
      OPENGRAPH_ATTRIBUTEGRAPH: 0
      OPENSWIFTUI_COMPATIBILITY_TEST: 0
      OPENSWIFTUI_SWIFT_LOG: 1
    container: swift:${{ matrix.swift_version }}-jammy
    steps:
      - uses: actions/checkout@v4
      - name: Building and running tests in debug mode with coverage
        run: |
          swift test \
            -c debug \
            --filter OpenSwiftUITests \
            -Xswiftc -warnings-as-errors \
            --enable-code-coverage \
            --build-path .build-test-debug
          llvm-cov show \
            -instr-profile=.build-test-debug/debug/codecov/default.profdata \
            .build-test-debug/debug/OpenSwiftUIPackageTests.xctest \
            > coverage.txt
        continue-on-error: ${{ matrix.continue-on-error }}
        id: debug-test
      - name: Building and running tests in release mode
        run: |
          swift test \
            -c release \
            --filter OpenSwiftUITests \
            -Xswiftc -warnings-as-errors \
            --build-path .build-test-release
        continue-on-error: ${{ matrix.continue-on-error }}
        id: release-test
        if: steps.debug-test.outcome == 'success'
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
        continue-on-error: true
        if: steps.debug-test.outcome == 'success'